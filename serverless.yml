# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: family-games-api

custom:
  tableName: 'games-table-${self:provider.stage}'
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
    noStart: true

# app and org for use with dashboard.serverless.com
#app: your-app-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details

plugins:
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221

  # you can overwrite defaults here
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { 'Fn::GetAtt': ['GamesDynamoDBTable', 'Arn'] }

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'
    environment:
      USERS_TABLE: ${self:custom.tableName}
      # NODE_ENV: ${self:custom.nodeEnv}

# you can add CloudFormation resource templates here
resources:
  Resources:
    GamesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: gameId
            AttributeType: S
        KeySchema:
          - AttributeName: gameId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
  #   NewResource:
  #     Type: AWS::S3::Bucket
  #     Properties:
  #       BucketName: my-new-bucket
  # Outputs:
  #   NewOutput:
  #     Description: "Description for the output"
  #     Value: "Some output value"

package:
  exclude:
    - node_modules/**
    - venv/**
  # patterns:
  #   - '!exclude-me.js'
  #   - '!exclude-me-dir/**'
  #   - include-me.js
  #   - include-me-dir/**

